<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">


<!-- 	<global-method-security secured-annotations="enabled">
	    <expression-handler ref="expressionHandler"/>
    </global-method-security> -->
 
    <beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler" />
    
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/members" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/products" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" />
	</http>

	
	<authentication-manager>
		<!-- <authentication-provider> <user-service> <user name="wallmart" password="prova" 
			authorities="ROLE_USER" /> </user-service> </authentication-provider> -->
			
			
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="
		      select email,password, 1 
		      from Member where email=?"
 
				authorities-by-username-query="
		      select m.email, mr.MEMBER_ROLE from member m, MemberRole mr 
		      where m.id = mr.member_id and m.email =?  " />
		</authentication-provider>

	</authentication-manager>

</beans:beans>